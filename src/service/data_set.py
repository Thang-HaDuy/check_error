from datetime import date, datetime
from typing import Dict, List, Union


from src.service.utlis import directionId8, culvertApertureId8

data_handlers = {
    "1": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/hoga/getByDoanDuong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/manhole",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/manhole/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/manhole/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_Ke","action":"_insert"}',
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "organization_id": d['data']['organizationId'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "object_type": d['data']['objectType'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "manhole_type_id": d['data']['subTypeId'],
            "size": d['data']['size'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },

        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "position": m['tenViTri'],
                "manhole_type": m['tenLoaiHoGa'],
                "road_edge_distance": m['khoangCachMepDuong'],
                "size": m['kichThuoc'],
                "status": m['tenTinhTrang'],
                "to_date": m['ngayKetThuc'],
                "object_name": m['tenDoanDuong'],
            }
            for m in d.get("data", [])
        ],

        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "distance_0km": float(d['data']['distanceToKm0']),
            "form_date": d['data']['startDate'],
            "position": d['data']['positionName'],
            "manhole_type": d['data'].get('subType', {}).get('name'),
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "size": d['data']['size'],
            "status": d['data']['statusName'],
            "to_date": d['data']['endDate'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})"
        },

        "build_post_payload": lambda m: {
            "startDate": m['form_date'],
            "endDate": m['to_date'],
            "objectType": m['object_type'],
            "nameObjectId": m['name_object_id'],
            "organizationId": m['organization_id'],
            "distanceToKm0": m['distance_0km'],
            "roadEdgeDistance": m['road_edge_distance'],
            "position": m['position'],
            "subTypeId": m['manhole_type_id'],
            "size": m['size'],
            "statusId": m['status_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
            "roadFaceDistanceId": m['name_object_id'],
        },

        "build_put_payload": lambda m: {
            "id": m['id'],
            "name": m['name'],
            "startDate": m['form_date'],
            "endDate": m['to_date'],
            "objectType": m['object_type'],
            "nameObjectId": m['name_object_id'],
            "organizationId": m['organization_id'],
            "distanceToKm0": m['distance_0km'],
            "roadEdgeDistance": m['road_edge_distance'],
            "position": m['position'],
            "subTypeId": m['manhole_type_id'],
            "size": m['size'],
            "statusId": m['status_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
            "roadFaceDistanceId": m['name_object_id'],
        },

        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_loaiHoGa": 0,
            "id_tinhTrang": 0,
            "id_viTri": 0,
            "ngay": "2025/10/01"
        }
    },
    "2": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/ke/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/embankment",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/embankment/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/embankment/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_HoLan","action":"_insert"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_viTri": 0,
            "id_tinhTrang": 0,
            "id_loaiKe": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "road_edge_distance": m['khoangCachMepDuong'],
                "position": m['tenViTri'],
                "type": m['tenLoaiKe'],
                "status": m['tenTinhTrang'],
                "size": m['chieuDai'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['positionName'],
            "type": d['data'].get('subType', {}).get('name'),
            "status": d['data']['statusName'],
            "size": d['data']['length'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "manhole_type_id": d['data']['subTypeId'],
            "size": d['data']['length'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "length": m['size'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "height": None,
            "id": m['id'],
            "length": m['size'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "width": None
        },
    },
    "3": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/holan/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/guard-rail",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/guard-rail/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/guard-rail/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_HoLan","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_viTri": 0,
            "id_tinhTrang": 0,
            "id_loaiHoLan": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "road_edge_distance": m['khoangCachMepDuong'],
                "position": m['tenViTri'],
                "type": m['tenLoaiHoLan'],
                "status": m['tenTinhTrang'],
                "size": m['chieuDai'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['positionName'],
            # "type": d['data'].get('subType', {}) if not d['data'].get('subType', {}) else d['data'].get('subType', {}).get('name'),
            "type":((d.get('data') or {}).get('subType') or {}).get('name'),
            "status": d['data']['statusName'],
            "size": d['data']['length'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "manhole_type_id": d['data']['subTypeId'],
            "size": d['data']['length'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "length": m['size'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "height": None,
            "id": m['id'],
            "length": m['size'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "width": None
        },
    },
    "4": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/cot-h/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/hpile",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/hpile/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/hpile/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_CotH","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_loaiCotH": 0,
            "id_tinhTrang": 0,
            "id_viTri": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "road_edge_distance": m['khoangCachMepDuong'],
                "position": m['tenViTri'],
                "type": m['tenLoaiCot'],
                "status": m['tenTinhTrang'],
                "size": m['noiDung'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['positionName'],
            "type":((d.get('data') or {}).get('subType') or {}).get('name'),
            "status": d['data']['statusName'],
            "size": d['data']['content'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "manhole_type_id": d['data']['subTypeId'],
            "size": d['data']['content'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "content": m['size'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "id": m['id'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
        },
    },
    "5": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/cot-km/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/km-column",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/km-column/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/km-column/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_CotKm","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_loaiCotKm": 0,
            "id_tinhTrang": 0,
            "id_viTri": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "road_edge_distance": m['khoangCachMepDuong'],
                "position": m['tenViTri'],
                "type": m['tenLoaiCot'],
                "status": m['tenTinhTrang'],
                "size": m['noiDung'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['positionName'],
            "type":((d.get('data') or {}).get('subType') or {}).get('name'),
            "status": d['data']['statusName'],
            "size": d['data']['content'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "manhole_type_id": d['data']['subTypeId'],
            "size": d['data']['content'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "content": m['size'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "height": None,
            "id": m['id'],
            "content": m['size'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "width": None
        },
    },
    "6": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/dinhphanquang/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/reflective-stud",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/reflective-stud/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/reflective-stud/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_DinhPhanQuang","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_viTri": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "form_date": date(m['namApDung'], (m['quyApDung'] - 1) * 3 + 1, 1).strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "road_edge_distance": m['khoangCachMepDuong'],
                "position": m['tenViTri'],
                "type": m['quyApDung'],
                "status": m['quyApDung'],
                "size": m['chieuDai'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['positionName'],
            "type":((d.get('data') or {}).get('subType') or {}).get('name'),
            "status": d['data']['statusName'],
            "size": d['data']['length'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "manhole_type_id": d['data']['subTypeId'],
            "size": d['data']['length'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "content": m['size'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "id": m['id'],
            "length": m['size'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
        },
    },
    "7": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/loire/getByDoanDuong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/exit-ramp",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/exit-ramp/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/exit-ramp/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_DinhPhanQuang","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_viTri": 0,
            "id_tinhTrang": 0,
            "tenLoiRe": "",
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "road_edge_distance": "0",
                "process":  m['lyTrinh'],
                "position": m['tenViTri'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "status": m['tenTinhTrang'],
                "width": m['chieuRong'],
                "name": m['name'],
                "angle": m['gocNghieng'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "road_edge_distance": "0",
            "position": d['data']['positionName'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "status": d['data']['statusName'],
            "width": d['data']['width'],
            "name": d['data']['name'],
            "angle": d['data']['angle'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "size": d['data']['length'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
            "width": d['data'].get('width'),  # hoặc mặc định 0 nếu cần: d['data'].get('width', 0)
            "angle": d['data'].get('angle'),
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
            "width": m['width'],
            "angle": m['angle'],
            "trafficOrganization": m['trafficOrganization'],
            "roadFaceDistanceId": m['roadFaceDistance_id'],
            "roadStructureId": m['roadStructure_id']
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "id": m['id'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "width": m['width'],
            "angle": m['angle'],
        },
    },
    "8": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/cong/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/culvert",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/culvert/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/culvert/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_Cong","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_viTri": 0,
            "id_tinhTrang": 0,
            "id_loaiCong": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "road_edge_distance": '0',
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "position": "Tim" if m['theoChieu'] == "NGANG" else m['tenViTri'],
                "direction": m['theoChieu'],
                "type": m['tenLoaiCong'],
                "culvertAperture": m['chieuRong'],
                "length": m['chieuDai'],
                "status": m['tenTinhTrang'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "road_edge_distance": "0",
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "position": "Tim" if d['data']['directionType'] == "TRANSVERSE" else d['data']['positionName'],
            "direction": directionId8[str(d['data']['directionType'])],
            "type": ((d.get('data') or {}).get('subType') or {}).get('name'),
            "culvertAperture": culvertApertureId8.get(d['data']['culvertApertureId']),
            "length": d['data']['length'],
            "status": d['data']['statusName'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "manhole_type_id": d['data']['subTypeId'],
            "size": d['data']['length'],
            "direction_type": d['data']['directionType'],
            "culvert_aperture": d['data']['culvertApertureId'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
            "width": m['width'],
            "angle": m['angle'],
            "trafficOrganization": m['trafficOrganization'],
            "roadFaceDistanceId": m['roadFaceDistance_id'],
            "roadStructureId": m['roadStructure_id']
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "id": m['id'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "length": m['size'],
            "subTypeId": m['manhole_type_id'],
            "directionType": m['direction_type'],
            "culvertApertureId": m['culvert_aperture'],
        },
    },
    "9": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/ranhnuoc/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/water-channel",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/water-channel/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/water-channel/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_RanhNuoc","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_viTri": 0,
            "id_tinhTrang": 0,
            "id_loaiRanh": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "road_edge_distance":  m['khoangCachMepDuong'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "position": m['tenViTri'],
                "type": m['tenLoaiRanhNuoc'],
                "width": m['beRongRanh'],
                "length": m['chieuDai'],
                "status": m['tenTinhTrang'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "position": d['data']['positionName'],
            "type": ((d.get('data') or {}).get('subType') or {}).get('name'),
            "width": d['data']['width'],
            "length": d['data']['length'],
            "status": d['data']['statusName'],
        },
        "parse_detail": lambda d: {
            "id":  d['data']['id'],
            "name": d['data']['name'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "organization_id": d['data']['organizationId'],
            "object_type": d['data']['objectType'],
            "distance_0km": d['data']['distanceToKm0'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "position": d['data']['position'],
            "type_id": d['data']['subTypeId'],
            "length": d['data']['length'],
            "width": d['data']['width'],
            "status_id": d['data']['statusId'],
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
            "width": m['width'],
            "angle": m['angle'],
            "trafficOrganization": m['trafficOrganization'],
            "roadFaceDistanceId": m['roadFaceDistance_id'],
            "roadStructureId": m['roadStructure_id']
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "id": m['id'],
            "length": m['length'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['type_id'],
            "width": m['width'],
        },
    },
    "10": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/daiphancach/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/median-strip",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/median-strip/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/median-strip/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_DaiPhanCach","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_loaiDaiPhanCach": 0,
            "id_hienTrang": 0,
            "id_viTri": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  m['lyTrinh'],
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "road_edge_distance":  m['khoangCachMepDuong'],
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "position": m['tenViTri'],
                "type": m['tenLoaiDaiPhanCach'],
                "width": m['chieuRong'],
                "length": m['chieuDai'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": d['data']['name'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "position": d['data']['positionName'],
            "type": ((d.get('data') or {}).get('subType') or {}).get('name'),
            "width": d['data']['width'],
            "length": d['data']['length'],
        },
        "parse_detail": lambda d: {
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
            "distance_0km": d['data']['distanceToKm0'],
            "form_date": d['data']['startDate'],
            "id": d['data']['id'],
            "length": d['data']['length'],
            "manhole_type_id": d['data']['subTypeId'],
            "name": d['data']['name'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "object_type": d['data']['objectType'],
            "organization_id": d['data']['organizationId'],
            "position": d['data']['position'],
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "status_id": d['data']['statusId'],
            "to_date": d['data']['endDate'],
            "width": d['data'].get('width'),  # hoặc mặc định 0 nếu cần: d['data'].get('width', 0)
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['manhole_type_id'],
            "coordinates": m['coordinates'],
            "description": m['description'],
            "width": m['width'],
            "angle": m['angle'],
            "trafficOrganization": m['trafficOrganization'],
            "roadFaceDistanceId": m['roadFaceDistance_id'],
            "roadStructureId": m['roadStructure_id']
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "id": m['id'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['type_id'],
            "width": m['width'],
            "length": m['length'],
        },
    },
    "11": {
        "urls": { 
            "v1": "https://rbms-hn-api.giaothong247.vn/duongbo/doancoctieu/getbydoanduong",
            "change": "http://uat.bitecco.vn:8700/v1/auxiliary/traffic-cone",
            "search": "http://uat.bitecco.vn:8700/v1/auxiliary/traffic-cone/search?page=0&size=500&date=&objectType=ROAD&objectIds=",
            "detail": "http://uat.bitecco.vn:8700/v1/auxiliary/traffic-cone/detail/"
        },
        "x_access_permission" : '{"code":"QLDB_DoanCocTieu","action":"_view"}',
        "craw_payload": lambda id_: {
            "id_doanDuong": id_,
            "lyTrinh": 0,
            "id_tinhTrang": 0,
            "id_loaiCocTieu": 0,
            "ngay": "2025/10/01"
        },
        "parse_list": lambda d: [
            {
                "id": m['id'],
                "process":  "0",
                "object_name": m['tenDoanDuong'],
                "distance_0km": m['lyTrinh_khoangCach'],
                "road_edge_distance":  "0",
                "form_date": datetime.strptime(m['ngayApDung'], "%Y-%m-%dT%H:%M:%S.%fZ").strftime("%d/%m/%Y"),
                "to_date": m['ngayKetThuc'],
                "position": "Trái" if int(m.get('soLuongBenPhai') or 0) < int(m.get('soLuongBenTrai') or 0) else "Phải",
                "type": m['tenLoaiCocTieu'],
                "quantity": int(m.get('soLuongBenPhai') or 0) + int(m.get('soLuongBenTrai') or 0),
                "length": m['chieuDai'],
                "status": m['tenTinhTrang'],
            }
            for m in d.get("data", [])
        ],
        "format_detail": lambda d: {
            "id": d['data']['id'],
            "process": "",
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "distance_0km": float(d['data']['distanceToKm0']),
            "road_edge_distance": "0",
            "form_date": d['data']['startDate'],
            "to_date": d['data']['endDate'],
            "position": d['data']['positionName'],
            "type": ((d.get('data') or {}).get('subType') or {}).get('name'),
            "quantity": d['data']['quantity'],
            "length": d['data']['length'],
            "status": d['data']['statusName'],
        },
        "parse_detail": lambda d: {
            "coordinates": d['data']['coordinates'],
            "description": d['data']['description'],
            "distance_0km": d['data']['distanceToKm0'],
            "to_date": d['data']['endDate'],
            "id":  d['data']['id'],
            "length":  d['data']['length'],
            "name": d['data']['name'],
            "name_object_id": d['data']['roadFaceDistance']['id'],
            "object_type": d['data']['objectType'],
            "organization_id": d['data']['organizationId'],
            "position": d['data']['position'],
            "quantity": d['data']['quantity'],
            "reflective_eyes_number": d['data']['reflectiveEyesNumber'],
            "form_date": d['data']['startDate'],
            "object_name": f"{d['data']['objectName']}({d['data']['roadFaceDistance']['range']} - {d['data']['roadFaceDistance']['range'] + d['data']['roadFaceDistance']['longs']})",
            "road_edge_distance": d['data']['roadEdgeDistance'],
            "type": d['data']['subTypeId'],
            "status_id": d['data']['statusId'],
        },
        "build_post_payload": lambda m: {
            "distanceToKm0": m.distance_0km,
            "endDate": m.to_date,
            "name": m.name,
            "nameObjectId": m.name_object_id,
            "objectType": m.object_type,
            "organizationId": m.organization_id,
            "position": m.position,
            "roadEdgeDistance": m.road_edge_distance,
            "roadFaceDistanceId": m.name_object_id,
            "startDate": m.form_date,
            "statusId": m.status_id,
            "subTypeId": m.manhole_type_id,
            "coordinates": m.coordinates,
            "description": m.description,
            "width": m.width,
            "angle": m.angle,
            "trafficOrganization": m.trafficOrganization,
            "roadFaceDistanceId": m.roadFaceDistance_id,
            "roadStructureId": m.roadStructure_id
        },

        "build_put_payload": lambda m: {
            "coordinates": m['coordinates'],
            "description": m['description'],
            "distanceToKm0": m['distance_0km'],
            "endDate": m['to_date'],
            "id": m['id'],
            "length": m['length'],
            "name": m['name'],
            "nameObjectId": m['name_object_id'],
            "objectType": m['object_type'],
            "organizationId": m['organization_id'],
            "position": m['position'],
            "quantity": m['quanlity'],
            "reflectiveEyesNumber": m['reflective_eyes_number'],
            "roadEdgeDistance": m['road_edge_distance'],
            "roadFaceDistanceId": m['name_object_id'],
            "startDate": m['form_date'],
            "statusId": m['status_id'],
            "subTypeId": m['type'],
        },
    },
}